package com.gitlab.notscripter.composecli

import com.github.ajalt.clikt.command.SuspendingCliktCommand
import com.github.ajalt.clikt.core.Context
import com.github.ajalt.clikt.parameters.options.default
import com.github.ajalt.clikt.parameters.options.flag
import com.github.ajalt.clikt.parameters.options.help
import com.github.ajalt.clikt.parameters.options.option
import com.github.ajalt.mordant.rendering.TextColors.*
import com.github.ajalt.mordant.rendering.TextStyles.*
import com.gitlab.notscripter.composecli.compose.getAdbDevices
import com.gitlab.notscripter.composecli.compose.getApplicationId
import com.gitlab.notscripter.composecli.compose.getMainActivity
import com.gitlab.notscripter.composecli.compose.sh
import com.gitlab.notscripter.composecli.compose.t
import com.gitlab.notscripter.composecli.model.Device
import java.io.File

class Run : SuspendingCliktCommand() {
    override fun help(context: Context) =
        "   Build and launch on a device or emulator — no mouse needed"

    private val devices: List<Device> = getAdbDevices()

    private val deviceId by
        option("-d", "--device")
            .help("ADB device ID (use `adb devices` to list)")
            .default(devices[0].id)
    private val logcat by option("-l", "--log").flag().help("Show log (default tag=MainActivity)")
    private val tag by option("-t", "--tag").help("Tag for logcat").default("MainActivity")

    override suspend fun run() {
        if (devices.size == 0) {
            t.println(red("There is no adb devices found."))
            return
        } else if (devices.size > 1) {
            t.println(
                red(
                    "There is more than one adb devices, please specify one deviceId with '-d' or '--device'."
                )
            )
            return
        }

        val appId = getApplicationId(File("./"))
        val mainActivity = getMainActivity(deviceId, appId)

        /*
        // Build
        sh("./gradlew assembleDebug", "Building...")

        // Install
        sh("adb -s ${deviceId} install ./app/build/outputs/apk/debug/app-debug.apk", "Installing")
        */

        // Launch
        sh(
            "adb -s ${deviceId} shell am start -a android.intent.action.MAIN -c android.intent.category.LAUNCHER -n ${mainActivity}",
            "Launching",
        )

        // Logcat
        if (logcat) {
            sh("adb logcat --pid=$(adb shell pidof -s ${appId}) '*:S ${tag}'", null, true)
        }
    }
}
